{"version":3,"sources":["ResultVisualiser.tsx","ExtendedEuclidianAlgorithm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ResultVisualiser","result","history","gcd","alpha","beta","startA","startB","Title","level","style","color","map","index","a","b","c","d","e","f","extendedEuclidianAlgorithm","Item","Math","floor","Typography","acc","reverse","slice","length","q","ExtendedEuclidianAlgorithm","useState","setA","setB","setResult","height","align","justify","span","direction","step","onChange","val","onClick","Error","type","maxHeight","overflow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13949103.chunk.js","sourcesContent":["import {\r\n    ExtendedCoefficients,\r\n    extendedEuclidianAlgorithm,\r\n    ExtendedEuclidianAlgorithmResult\r\n} from \"./ExtendedEuclidianAlgorithm\";\r\nimport {Switch, Timeline} from \"antd\";\r\nimport React, {useState} from \"react\";\r\nimport Title from \"antd/es/typography/Title\";\r\n\r\nexport const ResultVisualiser = ({result}: {result : ExtendedEuclidianAlgorithmResult}) => {\r\n    let {history, gcd, alpha, beta} = result;\r\n    let startA = history[0][\"a\"];\r\n    let startB = history[0][\"b\"];\r\n    return (\r\n        <div>\r\n            <Title level={4}>GCD of <span style={{color: \"#4A148C\"}}>{startA}</span> and <span\r\n                style={{color: \"#4A148C\"}}>{startB}</span></Title>\r\n            <Timeline>\r\n                {history.map(({a, b, c, d, e, f}, index) => {\r\n                    let {gcd, alpha,beta} = extendedEuclidianAlgorithm([{a,b, c : 1,  d: 0,  e : 0,  f: 1}])\r\n                    return <Timeline.Item key={index}>\r\n                        gcd({a},{b}) | {Math.floor(b/a)} | {alpha} {beta}\r\n                        <br/>\r\n                        {a} = {c}*{history[0].a} + {d}*{history[0].b}\r\n                        <br/>\r\n                        {b} = {e}*{history[0].a} + {f}*{history[0].b}\r\n                        <br/>\r\n                    </Timeline.Item>\r\n                })}\r\n            </Timeline>\r\n            <Title level={4}>Solution: {gcd}  = {alpha} * <span style={{color: \"#4A148C\"}}>{history[0][\"a\"]}</span>\r\n                + {beta} *\r\n                <span\r\n                    style={{color: \"#4A148C\"}}>{history[0][\"b\"]}</span>\r\n            </Title>\r\n        </div>\r\n    )\r\n}","import {Button, Col, Empty, InputNumber, Row, Space, Typography} from \"antd\";\r\nimport React, {useState} from \"react\";\r\nimport {ResultVisualiser} from \"./ResultVisualiser\";\r\n\r\nconst {Title} = Typography;\r\n\r\nexport type ExtendedEuclidianAlgorithmResult = {history : Array<ExtendedCoefficients>, gcd : number, alpha : number, beta : number};\r\nexport type ExtendedCoefficients = {a : number, b : number, c : number, d : number, e : number, f : number}\r\nexport const extendedEuclidianAlgorithm: (acc: Array<ExtendedCoefficients>) => ExtendedEuclidianAlgorithmResult =\r\n    (acc) => {\r\n        let {a, b, c, d, e, f} = acc[0];\r\n        if (a === 0) {\r\n            let history = acc.reverse().slice(0, -1);\r\n            return {history: history, alpha: history[history.length-1].c, beta : history[history.length - 1].d, gcd : history[history.length-1].a};\r\n        }\r\n        else\r\n        {\r\n            let q = Math.floor(b/a);\r\n            let r = b%a;\r\n            let nextE = c;\r\n            let nextF = d;\r\n            let nextC = (e-(q*c));\r\n            let nextD = (f-(q*d));\r\n            let nextCoefficients =  {a : r, b : a, c : nextC, d : nextD, e : nextE, f : nextF}\r\n            return extendedEuclidianAlgorithm([nextCoefficients, ...acc]);\r\n        }\r\n    }\r\n\r\nexport const ExtendedEuclidianAlgorithm = () => {\r\n    let [a, setA] = useState<number | null | undefined>(0);\r\n    let [b, setB] = useState<number | null | undefined>(0);\r\n    let [result, setResult] = useState<ExtendedEuclidianAlgorithmResult | undefined | null>(null);\r\n    return <>\r\n        <Row style={{height: \"100vh\"}} align={\"middle\"} justify={\"center\"}>\r\n            <Col span={8}>\r\n                <Space direction={'vertical'} align={'center'}>\r\n                    <Space>a:<InputNumber step={1} onChange={(val) => {\r\n                        setA(val as number)\r\n                    }}/></Space>\r\n                    <Space>b: <InputNumber step={1} onChange={(val) => {\r\n                        setB(val as number)\r\n                    }}/></Space>\r\n                    <Button onClick={() => {\r\n                        if (a == null || b == null) {\r\n                            throw new Error(\"a or b is undefined!\");\r\n                        }\r\n                        setResult(extendedEuclidianAlgorithm([{a,b, c : 1, d : 0, e : 0, f : 1}]));\r\n                    }} type=\"primary\">Go</Button>\r\n                </Space>\r\n            </Col>\r\n            <Col span={8} style={{maxHeight : \"80vh\", overflow : \"auto\"}}>\r\n                {result && <ResultVisualiser result={result}/>}\r\n                {!result && <Empty/>}\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {ExtendedEuclidianAlgorithm} from \"./ExtendedEuclidianAlgorithm\";\n\nfunction App() {\n  return (\n        <ExtendedEuclidianAlgorithm/>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}